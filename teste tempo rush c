shared.stop = true
wait(1)
shared.stop = false

local str = shared.scr or "qw[er]ty"
local vim = game:GetService("VirtualInputManager")

local function calculateDelay(bpm)
    return 60 / bpm  -- Calculer le délai entre chaque pression de touche en fonction du BPM
end

local function pressKey(key)
    vim:SendKeyEvent(true, string.byte(key:lower()), false, nil)
    vim:SendKeyEvent(false, string.byte(key:lower()), false, nil)
end

-- Initialisation des BPM et de l'heure de début
local bpm = 120  -- BPM de départ
local startTime = tick()

local delay = calculateDelay(bpm)  -- Calculer le délai initial basé sur le BPM
local currentBPM = bpm  -- Initialiser le BPM actuel

for i = 1, #str do
    if shared.stop == true then return end  -- Arrêter si la variable stop est activée

    local c = str:sub(i, i)  -- Prendre chaque caractère de la chaîne
    local currentTime = tick() - startTime  -- Temps écoulé depuis le début

    -- Changer le BPM après 5 secondes pour 160 et après 90 secondes pour 200
    if currentTime >= 90 and currentBPM ~= 200 then
        currentBPM = 200
    elseif currentTime >= 5 and currentBPM ~= 160 then
        currentBPM = 160
    elseif currentTime < 5 and currentBPM ~= 120 then
        currentBPM = 120
    end

    -- Recalculer le délai basé sur le BPM actuel
    delay = calculateDelay(currentBPM)

    -- Gérer les caractères spéciaux
    if c == "[" then
        rem = false
        continue
    elseif c == "]" then
        rem = true
        continue
    elseif c == "|" or c == "-" then
        wait(delay * 0.2)  -- Attendre un délai plus court pour ces caractères
        continue
    end

    -- Essayer de presser la touche correspondant au caractère
    pcall(function()
        pressKey(c)
    end)

    -- Attendre selon le délai calculé pour le BPM
    wait(delay)
end
